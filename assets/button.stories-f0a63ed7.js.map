{"version":3,"file":"button.stories-f0a63ed7.js","sources":["../../node_modules/lit-html/directive.js","../../node_modules/lit-html/directives/class-map.js","../../src/internal/form.ts","../../src/internal/slot.ts","../../node_modules/lit-html/static.js","../../node_modules/lit-html/directives/if-defined.js","../../node_modules/@shoelace-style/localize/dist/index.js","../../src/translations/en.ts","../../src/utilities/localize.ts","../../node_modules/@lit/reactive-element/decorators/state.js","../../node_modules/@lit/reactive-element/decorators/base.js","../../node_modules/@lit/reactive-element/decorators/query.js","../../src/internal/watch.ts","../../src/internal/shoelace-element.ts","../../src/styles/component.styles.ts","../../src/components/button/button.styles.tsx","../../src/components/button/button.component.tsx","../../src/components/button/button.tsx"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst t={ATTRIBUTE:1,CHILD:2,PROPERTY:3,BOOLEAN_ATTRIBUTE:4,EVENT:5,ELEMENT:6},e=t=>(...e)=>({_$litDirective$:t,values:e});class i{constructor(t){}get _$AU(){return this._$AM._$AU}_$AT(t,e,i){this._$Ct=t,this._$AM=e,this._$Ci=i}_$AS(t,e){return this.update(t,e)}update(t,e){return this.render(...e)}}export{i as Directive,t as PartType,e as directive};\n//# sourceMappingURL=directive.js.map\n","import{noChange as t}from\"../lit-html.js\";import{directive as i,Directive as s,PartType as r}from\"../directive.js\";\n/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const o=i(class extends s{constructor(t){var i;if(super(t),t.type!==r.ATTRIBUTE||\"class\"!==t.name||(null===(i=t.strings)||void 0===i?void 0:i.length)>2)throw Error(\"`classMap()` can only be used in the `class` attribute and must be the only part in the attribute.\")}render(t){return\" \"+Object.keys(t).filter((i=>t[i])).join(\" \")+\" \"}update(i,[s]){var r,o;if(void 0===this.it){this.it=new Set,void 0!==i.strings&&(this.nt=new Set(i.strings.join(\" \").split(/\\s/).filter((t=>\"\"!==t))));for(const t in s)s[t]&&!(null===(r=this.nt)||void 0===r?void 0:r.has(t))&&this.it.add(t);return this.render(s)}const e=i.element.classList;this.it.forEach((t=>{t in s||(e.remove(t),this.it.delete(t))}));for(const t in s){const i=!!s[t];i===this.it.has(t)||(null===(o=this.nt)||void 0===o?void 0:o.has(t))||(i?(e.add(t),this.it.add(t)):(e.remove(t),this.it.delete(t)))}return t}});export{o as classMap};\n//# sourceMappingURL=class-map.js.map\n","import type { ReactiveController, ReactiveControllerHost } from 'lit';\nimport type { ShoelaceFormControl } from '../internal/shoelace-element';\nimport type SlButton from '../components/button/button';\n\n//\n// We store a WeakMap of forms + controls so we can keep references to all Shoelace controls within a given form. As\n// elements connect and disconnect to/from the DOM, their containing form is used as the key and the form control is\n// added and removed from the form's set, respectively.\n//\nexport const formCollections: WeakMap<HTMLFormElement, Set<ShoelaceFormControl>> = new WeakMap();\n\n//\n// We store a WeakMap of reportValidity() overloads so we can override it when form controls connect to the DOM and\n// restore the original behavior when they disconnect.\n//\nconst reportValidityOverloads: WeakMap<HTMLFormElement, () => boolean> = new WeakMap();\n\n//\n// We store a Set of controls that users have interacted with. This allows us to determine the interaction state\n// without littering the DOM with additional data attributes.\n//\nconst userInteractedControls: WeakSet<ShoelaceFormControl> = new WeakSet();\n\n//\n// We store a WeakMap of interactions for each form control so we can track when all conditions are met for validation.\n//\nconst interactions = new WeakMap<ShoelaceFormControl, string[]>();\n\nexport interface FormControlControllerOptions {\n  /** A function that returns the form containing the form control. */\n  form: (input: ShoelaceFormControl) => HTMLFormElement | null;\n  /** A function that returns the form control's name, which will be submitted with the form data. */\n  name: (input: ShoelaceFormControl) => string;\n  /** A function that returns the form control's current value. */\n  value: (input: ShoelaceFormControl) => unknown | unknown[];\n  /** A function that returns the form control's default value. */\n  defaultValue: (input: ShoelaceFormControl) => unknown | unknown[];\n  /** A function that returns the form control's current disabled state. If disabled, the value won't be submitted. */\n  disabled: (input: ShoelaceFormControl) => boolean;\n  /**\n   * A function that maps to the form control's reportValidity() function. When the control is invalid, this will\n   * prevent submission and trigger the browser's constraint violation warning.\n   */\n  reportValidity: (input: ShoelaceFormControl) => boolean;\n  /** A function that sets the form control's value */\n  setValue: (input: ShoelaceFormControl, value: unknown) => void;\n  /**\n   * An array of event names to listen to. When all events in the list are emitted, the control will receive validity\n   * states such as user-valid and user-invalid.user interacted validity states. */\n  assumeInteractionOn: string[];\n}\n\n/** A reactive controller to allow form controls to participate in form submission, validation, etc. */\nexport class FormControlController implements ReactiveController {\n  host: ShoelaceFormControl & ReactiveControllerHost;\n  form?: HTMLFormElement | null;\n  options: FormControlControllerOptions;\n\n  constructor(host: ReactiveControllerHost & ShoelaceFormControl, options?: Partial<FormControlControllerOptions>) {\n    (this.host = host).addController(this);\n    this.options = {\n      form: input => {\n        // If there's a form attribute, use it to find the target form by id\n        if (input.hasAttribute('form') && input.getAttribute('form') !== '') {\n          const root = input.getRootNode() as Document | ShadowRoot;\n          const formId = input.getAttribute('form');\n\n          if (formId) {\n            return root.getElementById(formId) as HTMLFormElement;\n          }\n        }\n\n        return input.closest('form');\n      },\n      name: input => input.name,\n      value: input => input.value,\n      defaultValue: input => input.defaultValue,\n      disabled: input => input.disabled ?? false,\n      reportValidity: input => (typeof input.reportValidity === 'function' ? input.reportValidity() : true),\n      setValue: (input, value: string) => (input.value = value),\n      assumeInteractionOn: ['sl-input'],\n      ...options\n    };\n  }\n\n  hostConnected() {\n    const form = this.options.form(this.host);\n\n    if (form) {\n      this.attachForm(form);\n    }\n\n    // Listen for interactions\n    interactions.set(this.host, []);\n    this.options.assumeInteractionOn.forEach(event => {\n      this.host.addEventListener(event, this.handleInteraction);\n    });\n  }\n\n  hostDisconnected() {\n    this.detachForm();\n\n    // Clean up interactions\n    interactions.delete(this.host);\n    this.options.assumeInteractionOn.forEach(event => {\n      this.host.removeEventListener(event, this.handleInteraction);\n    });\n  }\n\n  hostUpdated() {\n    const form = this.options.form(this.host);\n\n    // Detach if the form no longer exists\n    if (!form) {\n      this.detachForm();\n    }\n\n    // If the form has changed, reattach it\n    if (form && this.form !== form) {\n      this.detachForm();\n      this.attachForm(form);\n    }\n\n    if (this.host.hasUpdated) {\n      this.setValidity(this.host.validity.valid);\n    }\n  }\n\n  private attachForm(form?: HTMLFormElement) {\n    if (form) {\n      this.form = form;\n\n      // Add this element to the form's collection\n      if (formCollections.has(this.form)) {\n        formCollections.get(this.form)!.add(this.host);\n      } else {\n        formCollections.set(this.form, new Set<ShoelaceFormControl>([this.host]));\n      }\n\n      this.form.addEventListener('formdata', this.handleFormData);\n      this.form.addEventListener('submit', this.handleFormSubmit);\n      this.form.addEventListener('reset', this.handleFormReset);\n\n      // Overload the form's reportValidity() method so it looks at Shoelace form controls\n      if (!reportValidityOverloads.has(this.form)) {\n        reportValidityOverloads.set(this.form, this.form.reportValidity);\n        this.form.reportValidity = () => this.reportFormValidity();\n      }\n    } else {\n      this.form = undefined;\n    }\n  }\n\n  private detachForm() {\n    if (this.form) {\n      // Remove this element from the form's collection\n      formCollections.get(this.form)?.delete(this.host);\n\n      this.form.removeEventListener('formdata', this.handleFormData);\n      this.form.removeEventListener('submit', this.handleFormSubmit);\n      this.form.removeEventListener('reset', this.handleFormReset);\n\n      // Remove the overload and restore the original method\n      if (reportValidityOverloads.has(this.form)) {\n        this.form.reportValidity = reportValidityOverloads.get(this.form)!;\n        reportValidityOverloads.delete(this.form);\n      }\n    }\n\n    this.form = undefined;\n  }\n\n  private handleFormData = (event: FormDataEvent) => {\n    const disabled = this.options.disabled(this.host);\n    const name = this.options.name(this.host);\n    const value = this.options.value(this.host);\n\n    // For buttons, we only submit the value if they were the submitter. This is currently done in doAction() by\n    // injecting the name/value on a temporary button, so we can just skip them here.\n    const isButton = this.host.tagName.toLowerCase() === 'sl-button';\n\n    if (!disabled && !isButton && typeof name === 'string' && name.length > 0 && typeof value !== 'undefined') {\n      if (Array.isArray(value)) {\n        (value as unknown[]).forEach(val => {\n          event.formData.append(name, (val as string | number | boolean).toString());\n        });\n      } else {\n        event.formData.append(name, (value as string | number | boolean).toString());\n      }\n    }\n  };\n\n  private handleFormSubmit = (event: Event) => {\n    const disabled = this.options.disabled(this.host);\n    const reportValidity = this.options.reportValidity;\n\n    // Update the interacted state for all controls when the form is submitted\n    if (this.form && !this.form.noValidate) {\n      formCollections.get(this.form)?.forEach(control => {\n        this.setUserInteracted(control, true);\n      });\n    }\n\n    if (this.form && !this.form.noValidate && !disabled && !reportValidity(this.host)) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    }\n  };\n\n  private handleFormReset = () => {\n    this.options.setValue(this.host, this.options.defaultValue(this.host));\n    this.setUserInteracted(this.host, false);\n    interactions.set(this.host, []);\n  };\n\n  private handleInteraction = (event: Event) => {\n    const emittedEvents = interactions.get(this.host)!;\n\n    if (!emittedEvents.includes(event.type)) {\n      emittedEvents.push(event.type);\n    }\n\n    // Mark it as user-interacted as soon as all associated events have been emitted\n    if (emittedEvents.length === this.options.assumeInteractionOn.length) {\n      this.setUserInteracted(this.host, true);\n    }\n  };\n\n  private reportFormValidity = () => {\n    //\n    // Shoelace form controls work hard to act like regular form controls. They support the Constraint Validation API\n    // and its associated methods such as setCustomValidity() and reportValidity(). However, the HTMLFormElement also\n    // has a reportValidity() method that will trigger validation on all child controls. Since we're not yet using\n    // ElementInternals, we need to overload this method so it looks for any element with the reportValidity() method.\n    //\n    // We preserve the original method in a WeakMap, but we don't call it from the overload because that would trigger\n    // validations in an unexpected order. When the element disconnects, we revert to the original behavior. This won't\n    // be necessary once we can use ElementInternals.\n    //\n    // Note that we're also honoring the form's novalidate attribute.\n    //\n    if (this.form && !this.form.noValidate) {\n      // This seems sloppy, but checking all elements will cover native inputs, Shoelace inputs, and other custom\n      // elements that support the constraint validation API.\n      const elements = this.form.querySelectorAll<HTMLInputElement>('*');\n\n      for (const element of elements) {\n        if (typeof element.reportValidity === 'function') {\n          if (!element.reportValidity()) {\n            return false;\n          }\n        }\n      }\n    }\n\n    return true;\n  };\n\n  private setUserInteracted(el: ShoelaceFormControl, hasInteracted: boolean) {\n    if (hasInteracted) {\n      userInteractedControls.add(el);\n    } else {\n      userInteractedControls.delete(el);\n    }\n\n    el.requestUpdate();\n  }\n\n  private doAction(type: 'submit' | 'reset', submitter?: HTMLInputElement | SlButton) {\n    if (this.form) {\n      const button = document.createElement('button');\n      button.type = type;\n      button.style.position = 'absolute';\n      button.style.width = '0';\n      button.style.height = '0';\n      button.style.clipPath = 'inset(50%)';\n      button.style.overflow = 'hidden';\n      button.style.whiteSpace = 'nowrap';\n\n      // Pass name, value, and form attributes through to the temporary button\n      if (submitter) {\n        button.name = submitter.name;\n        button.value = submitter.value;\n\n        ['formaction', 'formenctype', 'formmethod', 'formnovalidate', 'formtarget'].forEach(attr => {\n          if (submitter.hasAttribute(attr)) {\n            button.setAttribute(attr, submitter.getAttribute(attr)!);\n          }\n        });\n      }\n\n      this.form.append(button);\n      button.click();\n      button.remove();\n    }\n  }\n\n  /** Returns the associated `<form>` element, if one exists. */\n  getForm() {\n    return this.form ?? null;\n  }\n\n  /** Resets the form, restoring all the control to their default value */\n  reset(submitter?: HTMLInputElement | SlButton) {\n    this.doAction('reset', submitter);\n  }\n\n  /** Submits the form, triggering validation and form data injection. */\n  submit(submitter?: HTMLInputElement | SlButton) {\n    // Calling form.submit() bypasses the submit event and constraint validation. To prevent this, we can inject a\n    // native submit button into the form, \"click\" it, then remove it to simulate a standard form submission.\n    this.doAction('submit', submitter);\n  }\n\n  /**\n   * Synchronously sets the form control's validity. Call this when you know the future validity but need to update\n   * the host element immediately, i.e. before Lit updates the component in the next update.\n   */\n  setValidity(isValid: boolean) {\n    const host = this.host;\n    const hasInteracted = Boolean(userInteractedControls.has(host));\n    const required = Boolean(host.required);\n\n    //\n    // We're mapping the following \"states\" to data attributes. In the future, we can use ElementInternals.states to\n    // create a similar mapping, but instead of [data-invalid] it will look like :--invalid.\n    //\n    // See this RFC for more details: https://github.com/shoelace-style/shoelace/issues/1011\n    //\n    host.toggleAttribute('data-required', required);\n    host.toggleAttribute('data-optional', !required);\n    host.toggleAttribute('data-invalid', !isValid);\n    host.toggleAttribute('data-valid', isValid);\n    host.toggleAttribute('data-user-invalid', !isValid && hasInteracted);\n    host.toggleAttribute('data-user-valid', isValid && hasInteracted);\n  }\n\n  /**\n   * Updates the form control's validity based on the current value of `host.validity.valid`. Call this when anything\n   * that affects constraint validation changes so the component receives the correct validity states.\n   */\n  updateValidity() {\n    const host = this.host;\n    this.setValidity(host.validity.valid);\n  }\n\n  /**\n   * Dispatches a non-bubbling, cancelable custom event of type `sl-invalid`.\n   * If the `sl-invalid` event will be cancelled then the original `invalid`\n   * event (which may have been passed as argument) will also be cancelled.\n   * If no original `invalid` event has been passed then the `sl-invalid`\n   * event will be cancelled before being dispatched.\n   */\n  emitInvalidEvent(originalInvalidEvent?: Event) {\n    const slInvalidEvent = new CustomEvent<Record<PropertyKey, never>>('sl-invalid', {\n      bubbles: false,\n      composed: false,\n      cancelable: true,\n      detail: {}\n    });\n\n    if (!originalInvalidEvent) {\n      slInvalidEvent.preventDefault();\n    }\n\n    if (!this.host.dispatchEvent(slInvalidEvent)) {\n      originalInvalidEvent?.preventDefault();\n    }\n  }\n}\n\n/*\n * Predefined common validity states.\n * All of them are read-only.\n */\n\n// A validity state object that represents `valid`\nexport const validValidityState: ValidityState = Object.freeze({\n  badInput: false,\n  customError: false,\n  patternMismatch: false,\n  rangeOverflow: false,\n  rangeUnderflow: false,\n  stepMismatch: false,\n  tooLong: false,\n  tooShort: false,\n  typeMismatch: false,\n  valid: true,\n  valueMissing: false\n});\n\n// A validity state object that represents `value missing`\nexport const valueMissingValidityState: ValidityState = Object.freeze({\n  ...validValidityState,\n  valid: false,\n  valueMissing: true\n});\n\n// A validity state object that represents a custom error\nexport const customErrorValidityState: ValidityState = Object.freeze({\n  ...validValidityState,\n  valid: false,\n  customError: true\n});\n","import type { ReactiveController, ReactiveControllerHost } from 'lit';\n\n/** A reactive controller that determines when slots exist. */\nexport class HasSlotController implements ReactiveController {\n  host: ReactiveControllerHost & Element;\n  slotNames: string[] = [];\n\n  constructor(host: ReactiveControllerHost & Element, ...slotNames: string[]) {\n    (this.host = host).addController(this);\n    this.slotNames = slotNames;\n  }\n\n  private hasDefaultSlot() {\n    return [...this.host.childNodes].some(node => {\n      if (node.nodeType === node.TEXT_NODE && node.textContent!.trim() !== '') {\n        return true;\n      }\n\n      if (node.nodeType === node.ELEMENT_NODE) {\n        const el = node as HTMLElement;\n        const tagName = el.tagName.toLowerCase();\n\n        // Ignore visually hidden elements since they aren't rendered\n        if (tagName === 'sl-visually-hidden') {\n          return false;\n        }\n\n        // If it doesn't have a slot attribute, it's part of the default slot\n        if (!el.hasAttribute('slot')) {\n          return true;\n        }\n      }\n\n      return false;\n    });\n  }\n\n  private hasNamedSlot(name: string) {\n    return this.host.querySelector(`:scope > [slot=\"${name}\"]`) !== null;\n  }\n\n  test(slotName: string) {\n    return slotName === '[default]' ? this.hasDefaultSlot() : this.hasNamedSlot(slotName);\n  }\n\n  hostConnected() {\n    this.host.shadowRoot!.addEventListener('slotchange', this.handleSlotChange);\n  }\n\n  hostDisconnected() {\n    this.host.shadowRoot!.removeEventListener('slotchange', this.handleSlotChange);\n  }\n\n  private handleSlotChange = (event: Event) => {\n    const slot = event.target as HTMLSlotElement;\n\n    if ((this.slotNames.includes('[default]') && !slot.name) || (slot.name && this.slotNames.includes(slot.name))) {\n      this.host.requestUpdate();\n    }\n  };\n}\n\n/**\n * Given a slot, this function iterates over all of its assigned element and text nodes and returns the concatenated\n * HTML as a string. This is useful because we can't use slot.innerHTML as an alternative.\n */\nexport function getInnerHTML(slot: HTMLSlotElement): string {\n  const nodes = slot.assignedNodes({ flatten: true });\n  let html = '';\n\n  [...nodes].forEach(node => {\n    if (node.nodeType === Node.ELEMENT_NODE) {\n      html += (node as HTMLElement).outerHTML;\n    }\n\n    if (node.nodeType === Node.TEXT_NODE) {\n      html += node.textContent;\n    }\n  });\n\n  return html;\n}\n\n/**\n * Given a slot, this function iterates over all of its assigned text nodes and returns the concatenated text as a\n * string. This is useful because we can't use slot.textContent as an alternative.\n */\nexport function getTextContent(slot: HTMLSlotElement | undefined | null): string {\n  if (!slot) {\n    return '';\n  }\n  const nodes = slot.assignedNodes({ flatten: true });\n  let text = '';\n\n  [...nodes].forEach(node => {\n    if (node.nodeType === Node.TEXT_NODE) {\n      text += node.textContent;\n    }\n  });\n\n  return text;\n}\n","import{html as t,svg as r}from\"./lit-html.js\";\n/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const e=Symbol.for(\"\"),l=t=>{if((null==t?void 0:t.r)===e)return null==t?void 0:t._$litStatic$},o=t=>({_$litStatic$:t,r:e}),i=(t,...r)=>({_$litStatic$:r.reduce(((r,e,l)=>r+(t=>{if(void 0!==t._$litStatic$)return t._$litStatic$;throw Error(`Value passed to 'literal' function must be a 'literal' result: ${t}. Use 'unsafeStatic' to pass non-literal values, but\\n            take care to ensure page security.`)})(e)+t[l+1]),t[0]),r:e}),s=new Map,a=t=>(r,...e)=>{const o=e.length;let i,a;const n=[],u=[];let c,$=0,f=!1;for(;$<o;){for(c=r[$];$<o&&void 0!==(a=e[$],i=l(a));)c+=i+r[++$],f=!0;$!==o&&u.push(a),n.push(c),$++}if($===o&&n.push(r[o]),f){const t=n.join(\"$$lit$$\");void 0===(r=s.get(t))&&(n.raw=n,s.set(t,r=n)),e=u}return t(r,...e)},n=a(t),u=a(r);export{n as html,i as literal,u as svg,o as unsafeStatic,a as withStatic};\n//# sourceMappingURL=static.js.map\n","import{nothing as t}from\"../lit-html.js\";\n/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const l=l=>null!=l?l:t;export{l as ifDefined};\n//# sourceMappingURL=if-defined.js.map\n","const connectedElements = new Set();\nconst documentElementObserver = new MutationObserver(update);\nconst translations = new Map();\nlet documentDirection = document.documentElement.dir || 'ltr';\nlet documentLanguage = document.documentElement.lang || navigator.language;\nlet fallback;\ndocumentElementObserver.observe(document.documentElement, {\n    attributes: true,\n    attributeFilter: ['dir', 'lang']\n});\nexport function registerTranslation(...translation) {\n    translation.map(t => {\n        const code = t.$code.toLowerCase();\n        if (translations.has(code)) {\n            translations.set(code, Object.assign(Object.assign({}, translations.get(code)), t));\n        }\n        else {\n            translations.set(code, t);\n        }\n        if (!fallback) {\n            fallback = t;\n        }\n    });\n    update();\n}\nexport function update() {\n    documentDirection = document.documentElement.dir || 'ltr';\n    documentLanguage = document.documentElement.lang || navigator.language;\n    [...connectedElements.keys()].map((el) => {\n        if (typeof el.requestUpdate === 'function') {\n            el.requestUpdate();\n        }\n    });\n}\nexport class LocalizeController {\n    constructor(host) {\n        this.host = host;\n        this.host.addController(this);\n    }\n    hostConnected() {\n        connectedElements.add(this.host);\n    }\n    hostDisconnected() {\n        connectedElements.delete(this.host);\n    }\n    dir() {\n        return `${this.host.dir || documentDirection}`.toLowerCase();\n    }\n    lang() {\n        return `${this.host.lang || documentLanguage}`.toLowerCase();\n    }\n    getTranslationData(lang) {\n        var _a, _b;\n        const locale = new Intl.Locale(lang.replace(/_/g, '-'));\n        const language = locale === null || locale === void 0 ? void 0 : locale.language.toLowerCase();\n        const region = (_b = (_a = locale === null || locale === void 0 ? void 0 : locale.region) === null || _a === void 0 ? void 0 : _a.toLowerCase()) !== null && _b !== void 0 ? _b : '';\n        const primary = translations.get(`${language}-${region}`);\n        const secondary = translations.get(language);\n        return { locale, language, region, primary, secondary };\n    }\n    exists(key, options) {\n        var _a;\n        const { primary, secondary } = this.getTranslationData((_a = options.lang) !== null && _a !== void 0 ? _a : this.lang());\n        options = Object.assign({ includeFallback: false }, options);\n        if ((primary && primary[key]) ||\n            (secondary && secondary[key]) ||\n            (options.includeFallback && fallback && fallback[key])) {\n            return true;\n        }\n        return false;\n    }\n    term(key, ...args) {\n        const { primary, secondary } = this.getTranslationData(this.lang());\n        let term;\n        if (primary && primary[key]) {\n            term = primary[key];\n        }\n        else if (secondary && secondary[key]) {\n            term = secondary[key];\n        }\n        else if (fallback && fallback[key]) {\n            term = fallback[key];\n        }\n        else {\n            console.error(`No translation found for: ${String(key)}`);\n            return String(key);\n        }\n        if (typeof term === 'function') {\n            return term(...args);\n        }\n        return term;\n    }\n    date(dateToFormat, options) {\n        dateToFormat = new Date(dateToFormat);\n        return new Intl.DateTimeFormat(this.lang(), options).format(dateToFormat);\n    }\n    number(numberToFormat, options) {\n        numberToFormat = Number(numberToFormat);\n        return isNaN(numberToFormat) ? '' : new Intl.NumberFormat(this.lang(), options).format(numberToFormat);\n    }\n    relativeTime(value, unit, options) {\n        return new Intl.RelativeTimeFormat(this.lang(), options).format(value, unit);\n    }\n}\n","import { registerTranslation } from '@shoelace-style/localize';\nimport type { Translation } from '../utilities/localize.js';\n\nconst translation: Translation = {\n  $code: 'en',\n  $name: 'English',\n  $dir: 'ltr',\n\n  carousel: 'Carousel',\n  clearEntry: 'Clear entry',\n  close: 'Close',\n  copied: 'Copied',\n  copy: 'Copy',\n  currentValue: 'Current value',\n  error: 'Error',\n  goToSlide: (slide, count) => `Go to slide ${slide} of ${count}`,\n  hidePassword: 'Hide password',\n  loading: 'Loading',\n  nextSlide: 'Next slide',\n  numOptionsSelected: num => {\n    if (num === 0) return 'No options selected';\n    if (num === 1) return '1 option selected';\n    return `${num} options selected`;\n  },\n  previousSlide: 'Previous slide',\n  progress: 'Progress',\n  remove: 'Remove',\n  resize: 'Resize',\n  scrollToEnd: 'Scroll to end',\n  scrollToStart: 'Scroll to start',\n  selectAColorFromTheScreen: 'Select a color from the screen',\n  showPassword: 'Show password',\n  slideNum: slide => `Slide ${slide}`,\n  toggleColorFormat: 'Toggle color format'\n};\n\nregisterTranslation(translation);\n\nexport default translation;\n","import { LocalizeController as DefaultLocalizationController, registerTranslation } from '@shoelace-style/localize';\nimport en from '../translations/en.js'; // Register English as the default/fallback language\nimport type { Translation as DefaultTranslation } from '@shoelace-style/localize';\n\n// Extend the controller and apply our own translation interface for better typings\nexport class LocalizeController extends DefaultLocalizationController<Translation> {\n  // Technicallly '../translations/en.js' is supposed to work via side-effects. However, by some mystery sometimes the\n  // translations don't get bundled as expected resulting in `no translation found` errors.\n  // This is basically some extra assurance that our translations get registered prior to our localizer connecting in a component\n  // and we don't rely on implicit import ordering.\n  static {\n    registerTranslation(en);\n  }\n}\n\n// Export functions from the localize lib so we have one central place to import them from\nexport { registerTranslation } from '@shoelace-style/localize';\n\nexport interface Translation extends DefaultTranslation {\n  $code: string; // e.g. en, en-GB\n  $name: string; // e.g. English, Español\n  $dir: 'ltr' | 'rtl';\n\n  carousel: string;\n  clearEntry: string;\n  close: string;\n  copied: string;\n  copy: string;\n  currentValue: string;\n  error: string;\n  goToSlide: (slide: number, count: number) => string;\n  hidePassword: string;\n  loading: string;\n  nextSlide: string;\n  numOptionsSelected: (num: number) => string;\n  previousSlide: string;\n  progress: string;\n  remove: string;\n  resize: string;\n  scrollToEnd: string;\n  scrollToStart: string;\n  selectAColorFromTheScreen: string;\n  showPassword: string;\n  slideNum: (slide: number) => string;\n  toggleColorFormat: string;\n}\n","import{property as r}from\"./property.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */function t(t){return r({...t,state:!0})}export{t as state};\n//# sourceMappingURL=state.js.map\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst e=(e,t,o)=>{Object.defineProperty(t,o,e)},t=(e,t)=>({kind:\"method\",placement:\"prototype\",key:t.key,descriptor:e}),o=({finisher:e,descriptor:t})=>(o,n)=>{var r;if(void 0===n){const n=null!==(r=o.originalKey)&&void 0!==r?r:o.key,i=null!=t?{kind:\"method\",placement:\"prototype\",key:n,descriptor:t(o.key)}:{...o,key:n};return null!=e&&(i.finisher=function(t){e(t,n)}),i}{const r=o.constructor;void 0!==t&&Object.defineProperty(o,n,t(n)),null==e||e(r,n)}};export{o as decorateProperty,e as legacyPrototypeMethod,t as standardPrototypeMethod};\n//# sourceMappingURL=base.js.map\n","import{decorateProperty as o}from\"./base.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */function i(i,n){return o({descriptor:o=>{const t={get(){var o,n;return null!==(n=null===(o=this.renderRoot)||void 0===o?void 0:o.querySelector(i))&&void 0!==n?n:null},enumerable:!0,configurable:!0};if(n){const n=\"symbol\"==typeof o?Symbol():\"__\"+o;t.get=function(){var o,t;return void 0===this[n]&&(this[n]=null!==(t=null===(o=this.renderRoot)||void 0===o?void 0:o.querySelector(i))&&void 0!==t?t:null),this[n]}}return t}})}export{i as query};\n//# sourceMappingURL=query.js.map\n","import type { LitElement } from 'lit';\n\ntype UpdateHandler = (prev?: unknown, next?: unknown) => void;\n\ntype NonUndefined<A> = A extends undefined ? never : A;\n\ntype UpdateHandlerFunctionKeys<T extends object> = {\n  [K in keyof T]-?: NonUndefined<T[K]> extends UpdateHandler ? K : never;\n}[keyof T];\n\ninterface WatchOptions {\n  /**\n   * If true, will only start watching after the initial update/render\n   */\n  waitUntilFirstUpdate?: boolean;\n}\n\n/**\n * Runs when observed properties change, e.g. @property or @state, but before the component updates. To wait for an\n * update to complete after a change occurs, use `await this.updateComplete` in the handler. To start watching after the\n * initial update/render, use `{ waitUntilFirstUpdate: true }` or `this.hasUpdated` in the handler.\n *\n * Usage:\n *\n * @watch('propName')\n * handlePropChange(oldValue, newValue) {\n *   ...\n * }\n */\nexport function watch(propertyName: string | string[], options?: WatchOptions) {\n  const resolvedOptions: Required<WatchOptions> = {\n    waitUntilFirstUpdate: false,\n    ...options\n  };\n  return <ElemClass extends LitElement>(proto: ElemClass, decoratedFnName: UpdateHandlerFunctionKeys<ElemClass>) => {\n    // @ts-expect-error - update is a protected property\n    const { update } = proto;\n    const watchedProperties = Array.isArray(propertyName) ? propertyName : [propertyName];\n\n    // @ts-expect-error - update is a protected property\n    proto.update = function (this: ElemClass, changedProps: Map<keyof ElemClass, ElemClass[keyof ElemClass]>) {\n      watchedProperties.forEach(property => {\n        const key = property as keyof ElemClass;\n        if (changedProps.has(key)) {\n          const oldValue = changedProps.get(key);\n          const newValue = this[key];\n\n          if (oldValue !== newValue) {\n            if (!resolvedOptions.waitUntilFirstUpdate || this.hasUpdated) {\n              (this[decoratedFnName] as unknown as UpdateHandler)(oldValue, newValue);\n            }\n          }\n        }\n      });\n\n      update.call(this, changedProps);\n    };\n  };\n}\n","import { LitElement } from 'lit';\nimport { property } from 'lit/decorators.js';\n\n// Match event type name strings that are registered on GlobalEventHandlersEventMap...\ntype EventTypeRequiresDetail<T> = T extends keyof GlobalEventHandlersEventMap\n  ? // ...where the event detail is an object...\n  GlobalEventHandlersEventMap[T] extends CustomEvent<Record<PropertyKey, unknown>>\n  ? // ...that is non-empty...\n  GlobalEventHandlersEventMap[T] extends CustomEvent<Record<PropertyKey, never>>\n  ? never\n  : // ...and has at least one non-optional property\n  Partial<GlobalEventHandlersEventMap[T]['detail']> extends GlobalEventHandlersEventMap[T]['detail']\n  ? never\n  : T\n  : never\n  : never;\n\n// The inverse of the above (match any type that doesn't match EventTypeRequiresDetail)\ntype EventTypeDoesNotRequireDetail<T> = T extends keyof GlobalEventHandlersEventMap\n  ? GlobalEventHandlersEventMap[T] extends CustomEvent<Record<PropertyKey, unknown>>\n  ? GlobalEventHandlersEventMap[T] extends CustomEvent<Record<PropertyKey, never>>\n  ? T\n  : Partial<GlobalEventHandlersEventMap[T]['detail']> extends GlobalEventHandlersEventMap[T]['detail']\n  ? T\n  : never\n  : T\n  : T;\n\n// `keyof EventTypesWithRequiredDetail` lists all registered event types that require detail\ntype EventTypesWithRequiredDetail = {\n  [EventType in keyof GlobalEventHandlersEventMap as EventTypeRequiresDetail<EventType>]: true;\n};\n\n// `keyof EventTypesWithoutRequiredDetail` lists all registered event types that do NOT require detail\ntype EventTypesWithoutRequiredDetail = {\n  [EventType in keyof GlobalEventHandlersEventMap as EventTypeDoesNotRequireDetail<EventType>]: true;\n};\n\n// Helper to make a specific property of an object non-optional\ntype WithRequired<T, K extends keyof T> = T & { [P in K]-?: T[P] };\n\n// Given an event name string, get a valid type for the options to initialize the event that is more restrictive than\n// just CustomEventInit when appropriate (validate the type of the event detail, and require it to be provided if the\n// event requires it)\ntype SlEventInit<T> = T extends keyof GlobalEventHandlersEventMap\n  ? GlobalEventHandlersEventMap[T] extends CustomEvent<Record<PropertyKey, unknown>>\n  ? GlobalEventHandlersEventMap[T] extends CustomEvent<Record<PropertyKey, never>>\n  ? CustomEventInit<GlobalEventHandlersEventMap[T]['detail']>\n  : Partial<GlobalEventHandlersEventMap[T]['detail']> extends GlobalEventHandlersEventMap[T]['detail']\n  ? CustomEventInit<GlobalEventHandlersEventMap[T]['detail']>\n  : WithRequired<CustomEventInit<GlobalEventHandlersEventMap[T]['detail']>, 'detail'>\n  : CustomEventInit\n  : CustomEventInit;\n\n// Given an event name string, get the type of the event\ntype GetCustomEventType<T> = T extends keyof GlobalEventHandlersEventMap\n  ? GlobalEventHandlersEventMap[T] extends CustomEvent<unknown>\n  ? GlobalEventHandlersEventMap[T]\n  : CustomEvent<unknown>\n  : CustomEvent<unknown>;\n\n// `keyof ValidEventTypeMap` is equivalent to `keyof GlobalEventHandlersEventMap` but gives a nicer error message\ntype ValidEventTypeMap = EventTypesWithRequiredDetail | EventTypesWithoutRequiredDetail;\n\nexport default class ShoelaceElement extends LitElement {\n  // Make localization attributes reactive\n  @property() dir: string;\n  @property() lang: string;\n\n  /** Emits a custom event with more convenient defaults. */\n  emit<T extends string & keyof EventTypesWithoutRequiredDetail>(\n    name: EventTypeDoesNotRequireDetail<T>,\n    options?: SlEventInit<T> | undefined\n  ): GetCustomEventType<T>;\n  emit<T extends string & keyof EventTypesWithRequiredDetail>(\n    name: EventTypeRequiresDetail<T>,\n    options: SlEventInit<T>\n  ): GetCustomEventType<T>;\n  emit<T extends string & keyof ValidEventTypeMap>(\n    name: T,\n    options?: SlEventInit<T> | undefined\n  ): GetCustomEventType<T> {\n    const event = new CustomEvent(name, {\n      bubbles: true,\n      cancelable: false,\n      composed: true,\n      detail: {},\n      ...options\n    });\n\n    this.dispatchEvent(event);\n\n    return event as GetCustomEventType<T>;\n  }\n\n  /* eslint-disable */\n  ///////////// disabled to avoid \"__SHOELACE_VERSION__ is not defined\" error\n  /*\n  // @ts-expect-error This is auto-injected at build time.\n  static version = __SHOELACE_VERSION__;\n  */\n  /* eslint-enable */\n\n  static define(name: string, elementConstructor = this, options: ElementDefinitionOptions = {}) {\n    const currentlyRegisteredConstructor = customElements.get(name) as\n      | CustomElementConstructor\n      | typeof ShoelaceElement;\n\n    if (!currentlyRegisteredConstructor) {\n      customElements.define(name, class extends elementConstructor { } as unknown as CustomElementConstructor, options);\n      return;\n    }\n\n    ///////////// disabled to avoid \"__SHOELACE_VERSION__ is not defined\" error\n\n    // let newVersion = ' (unknown version)';\n    // let existingVersion = newVersion;\n\n    // if ('version' in elementConstructor && elementConstructor.version) {\n    //   newVersion = ' v' + elementConstructor.version;\n    // }\n\n    // if ('version' in currentlyRegisteredConstructor && currentlyRegisteredConstructor.version) {\n    //   existingVersion = ' v' + currentlyRegisteredConstructor.version;\n    // }\n\n    // // Need to make sure we're not working with null or empty strings before doing version comparisons.\n    // if (newVersion && existingVersion && newVersion === existingVersion) {\n    //   // If versions match, we don't need to warn anyone. Carry on.\n    //   return;\n    // }\n\n    // console.warn(\n    //   `Attempted to register <${name}>${newVersion}, but <${name}>${existingVersion} has already been registered.`\n    // );\n  }\n\n  static dependencies: Record<string, typeof ShoelaceElement> = {};\n\n  constructor() {\n    super();\n    Object.entries((this.constructor as typeof ShoelaceElement).dependencies).forEach(([name, component]) => {\n      (this.constructor as typeof ShoelaceElement).define(name, component);\n    });\n  }\n}\n\nexport interface ShoelaceFormControl extends ShoelaceElement {\n  // Form attributes\n  name: string;\n  value: unknown;\n  disabled?: boolean;\n  defaultValue?: unknown;\n  defaultChecked?: boolean;\n  form?: string;\n\n  // Constraint validation attributes\n  pattern?: string;\n  min?: number | string | Date;\n  max?: number | string | Date;\n  step?: number | 'any';\n  required?: boolean;\n  minlength?: number;\n  maxlength?: number;\n\n  // Form validation properties\n  readonly validity: ValidityState;\n  readonly validationMessage: string;\n\n  // Form validation methods\n  checkValidity: () => boolean;\n  getForm: () => HTMLFormElement | null;\n  reportValidity: () => boolean;\n  setCustomValidity: (message: string) => void;\n}\n","import { css } from 'lit';\n\nexport default css`\n  :host {\n    box-sizing: border-box;\n  }\n\n  :host *,\n  :host *::before,\n  :host *::after {\n    box-sizing: inherit;\n  }\n\n  [hidden] {\n    display: none !important;\n  }\n`;\n","import { css } from 'lit';\nimport componentStyles from '../../styles/component.styles.js';\n\nexport default css`\n    ${componentStyles}\n\n    :host {\n        /*\n         * component local design token\n         */\n\n        --rui-button-padding-nav: var(--rui-spacing-xxs);/** navアイコン用 padding */\n        --rui-button-padding-nav-pill: var(--rui-spacing-xs);/** navアイコン用 padding */\n\n        /** width 固定値の場合、labelに改行発生するため、上下方向のmarginが必要 */\n        --rui-button-padding-v-xs: var(--rui-spacing-xxs);\n        --rui-button-padding-v-s: var(--rui-spacing-xxs);\n        --rui-button-padding-v-m: var(--rui-spacing-xs);\n        --rui-button-padding-v-l: var(--rui-spacing-s);\n        --rui-button-padding-v-xl: var(--rui-spacing-m);\n\n        /** labelが無い場合 iconはテキストサイズを継承せず、独自のサイズを取る */\n        --rui-button-icon-only-size-xs: var(--rui-size-graphic-s);\n        --rui-button-icon-only-size-s: var(--rui-size-graphic-m);\n        --rui-button-icon-only-size-m: var(--rui-size-graphic-l);\n        --rui-button-icon-only-size-l: var(--rui-size-graphic-xl);\n        --rui-button-icon-only-size-xl: var(--rui-size-graphic-xxl);\n\n        display: inline-block;\n        position: relative;\n        width: auto;\n        cursor: pointer;\n    }\n    .button {\n        display: inline-flex;\n        align-items: center; /* was stretch */\n        justify-content: center;\n        width: 100%;\n        border-style: solid;\n        border-width: var(--rui-border-width-m);\n        font-family: var(--rui-font-regular);\n        font-weight: var(--rui-font-weight-m);\n        line-height: var(--rui-line-height-s);\n        text-decoration: none;\n        user-select: none;\n        -webkit-user-select: none;\n        /* white-space: nowrap; */\n        vertical-align: middle;\n        padding: 0;\n\n        transition:\n            var(--rui-duration-hover) background-color,\n            var(--rui-duration-hover) color,\n            var(--rui-duration-hover) border,\n            var(--rui-duration-hover) box-shadow;\n        cursor: inherit;\n    }\n\n    .button::-moz-focus-inner {\n        border: 0;\n    }\n\n    .button:focus {\n        outline: none;\n    }\n\n    .button:focus-visible {\n        outline: var(--rui-focus-ring);\n        outline-offset: var(--rui-focus-ring-offset);\n    }\n\n    .button--disabled {\n        opacity: var(--rui-opacity-disabled);\n        cursor: not-allowed;\n    }\n\n    /* When disabled, prevent mouse events from bubbling up from children */\n    .button--disabled * {\n        pointer-events: none;\n    }\n\n    .button__icon {\n        flex: 0 0 auto;\n        display: flex;\n        align-items: center;\n        pointer-events: none;\n    }\n\n    .button__label {\n        display: inline-block;\n        width: 100%;\n    }\n\n    /* TBD: working properly? */\n    .button__label::slotted(rui-icon) {\n        vertical-align: -2px;\n    }\n\n    /*\n     * Variants\n     */\n\n    /* Normal */\n    .button--normal {\n        background-color: var(--rui-color-white);\n        border-color: var(--rui-color-gray-200);\n        color: var(--rui-color-text-primary);\n    }\n    .button--normal:hover:not(.button--disabled) {\n        background-color: var(--rui-color-gray-50);\n    }\n    .button--normal:active:not(.button--disabled) {\n        background-color: var(--rui-color-blue-100);\n    }\n\n    /* Primary */\n    .button--primary {\n        background-color: var(--rui-color-blue-500);\n        border: none;\n        color: var(--rui-color-text-inverse);\n    }\n    .button--primary:hover:not(.button--disabled) {\n        background-color: var(--rui-color-blue-600);\n    }\n    .button--primary:active:not(.button--disabled) {\n        background-color: var(--rui-color-blue-700);\n    }\n\n    /* Secondary */\n    .button--secondary {\n        background-color: var(--rui-color-white);\n        border-color: var(--rui-color-blue);\n        color: var(--rui-color-text-blue); \n    }\n    .button--secondary:hover:not(.button--disabled) {\n        background-color: var(--rui-color-gray-50);\n    }\n    .button--secondary:active:not(.button--disabled) {\n        background-color: var(--rui-color-blue-100);\n    }\n\n    /* Borderless */\n    .button--borderless {\n        background-color: var(--rui-color-white);\n        border: none;\n        color: var(--rui-color-text-primary);\n    }\n    .button--borderless:hover:not(.button--disabled) {\n        background-color: var(--rui-color-gray-50);\n    }\n    .button--borderless:active:not(.button--disabled) {\n        background-color: var(--rui-color-blue-100);\n    }\n    \n    /* Transparent */\n    .button--transparent {\n        background-color: transparent;\n        border: none;\n        color: var(--rui-color-text-primary);\n    }\n    .button--transparent:hover:not(.button--disabled) {\n        background-color: var(--rui-color-gray-50);\n    }\n    .button--transparent:active:not(.button--disabled) {\n        background-color: var(--rui-color-blue-100);\n    }\n    /* Link */\n    .button--link {\n        background-color: transparent;\n        border-color: transparent;\n        color: var(--rui-color-blue-500);\n    }\n    .button--link:hover:not(.button--disabled) {\n        color: var(--rui-color-blue-600);\n    }\n    .button--link:focus-visible:not(.button--disabled) {\n        color: var(--rui-color-blue-500); \n    }\n    .button--link:active:not(.button--disabled) {\n        color: var(--rui-color-blue-700);\n    }\n    .button--link .button__label {\n        text-decoration: underline;\n    }\n\n    .button--fab {\n        box-shadow: var(--rui-shadow-l);\n    }\n\n    /*\n     * Size modifiers\n     */\n\n    .button--xs {\n        height: auto;\n        min-height: var(--rui-height-primary-xs);\n        font-size: var(--rui-font-size-primary-xs);\n    }\n    .button--s {\n        height: auto;\n        min-height: var(--rui-height-primary-s);\n        font-size: var(--rui-font-size-primary-s);\n    }\n    .button--m {\n        height: auto;\n        min-height: var(--rui-height-primary-m);\n        font-size: var(--rui-font-size-primary-m);\n    }\n    .button--l {\n        height: auto;\n        min-height: var(--rui-height-primary-l);\n        font-size: var(--rui-font-size-primary-l);\n    }\n    .button--xl {\n        height: auto;\n        min-height: var(--rui-height-primary-xl);\n        font-size: var(--rui-font-size-primary-xl);\n    }\n\n    /*\n     * Radius modifier\n     */\n    .button--radius-none {\n        border-radius: var(--rui-radius-lower-zero);\n    }\n    .button--radius-s {\n        border-radius: var(--rui-radius-lower-s);\n    }\n    .button--radius-m {\n        border-radius: var(--rui-radius-lower-m);\n    }\n    .button--radius-l {\n        border-radius: var(--rui-radius-lower-l);\n    }\n\n    /*\n     * Pill modifier\n     */\n    .button--pill.button--xs {\n        border-radius: var(--rui-height-primary-xs);\n    }\n    .button--pill.button--s {\n        border-radius: var(--rui-height-primary-s);\n    }\n    .button--pill.button--m {\n        border-radius: var(--rui-height-primary-m);\n    }\n    .button--pill.button--l {\n        border-radius: var(--rui-height-primary-l);\n    }\n    .button--pill.button--xl {\n        border-radius: var(--rui-height-primary-xl);\n    }\n\n    /*\n     * Icon button\n     * (labelがなくて iconがあるとき)\n     */\n    .button--no-label.button--has-icon {\n        padding: 0;\n    }\n    .button--no-label.button--has-icon .button__label {\n        display: none;\n    }\n    .button--no-label.button--has-icon.button--xs .button__icon {\n        font-size: var(--rui-button-icon-only-size-xs);\n    }\n    .button--no-label.button--has-icon.button--s .button__icon {\n        font-size: var(--rui-button-icon-only-size-s);\n    }\n    .button--no-label.button--has-icon.button--m .button__icon {\n        font-size: var(--rui-button-icon-only-size-m);\n    }\n    .button--no-label.button--has-icon.button--l .button__icon {\n        font-size: var(--rui-button-icon-only-size-l);\n    }\n    .button--no-label.button--has-icon.button--xl .button__icon {\n        font-size: var(--rui-button-icon-only-size-xl);\n    }\n    .button--no-label.button--has-icon.button--xs {\n        min-width: var(--rui-height-primary-xs);\n    }\n    .button--no-label.button--has-icon.button--s {\n        min-width: var(--rui-height-primary-s);\n    }\n    .button--no-label.button--has-icon.button--m {\n        min-width: var(--rui-height-primary-m);\n    }\n    .button--no-label.button--has-icon.button--l {\n        min-width: var(--rui-height-primary-l);\n    }\n    .button--no-label.button--has-icon.button--xl {\n        min-width: var(--rui-height-primary-xl);\n    }\n\n    /*\n     * Circle modifier\n     */\n    .button--circle {\n        padding-left: 0;\n        padding-right: 0;\n    }\n    .button--circle.button--xs {\n        width: var(--rui-height-primary-xs);\n        border-radius: 50%;\n    }\n    .button--circle.button--s {\n        width: var(--rui-height-primary-s);\n        border-radius: 50%;\n    }\n    .button--circle.button--m {\n        width: var(--rui-height-primary-m);\n        border-radius: 50%;\n    }\n    .button--circle.button--l {\n        width: var(--rui-height-primary-l);\n        border-radius: 50%;\n    }\n    .button--circle.button--xl {\n        width: var(--rui-height-primary-xl);\n        border-radius: 50%;\n    }\n    .button--circle .button__nav {\n        display: none;\n    }\n\n    /*\n     * Navigation Icon modifier\n     */\n\n    /** next(...)アイコンの位置指定 →　その他のNavigation Iconの位置指定は下記\"Button Spacing\"にて */\n    .button--nav .button__nav-next{\n        position: absolute;\n    }\n    /** ボタンサイズに応じて下からの距離指定 */\n    .button--nav.button--xs .button__nav-next{     \n        bottom: var(--rui-1-px-rem);\n    }\n    .button--nav.button--s .button__nav-next{\n        bottom: var(--rui-2-px-rem);\n    }\n    .button--nav.button--m .button__nav-next,\n    .button--nav.button--l .button__nav-next,\n    .button--nav.button--xl .button__nav-next{\n        bottom: var(--rui-4-px-rem);\n    }\n    /** 角丸に応じて右方向位置調整 */\n    .button--nav.button--radius-none .button__nav-next{\n        right: var(--rui-4-px-rem);\n    }\n    .button--nav.button--radius-s .button__nav-next{\n        right: max(var(--rui-radius-lower-s), var(--rui-4-px-rem));\n    }\n    .button--nav.button--radius-m .button__nav-next{\n        right: max(var(--rui-radius-lower-m), var(--rui-4-px-rem));\n    }\n    .button--nav.button--radius-l .button__nav-next{\n        right: max(var(--rui-radius-lower-l), var(--rui-4-px-rem));\n    }\n\n    /** Pill型の場合 labelの右に並べる*/\n    .button--nav.button--pill .button__nav-next{\n        position: relative;\n    }\n    .button--nav.button--pill .button__nav-next{\n        right: initial;\n        bottom: initial;\n    }\n\n    /*\n     * Loading modifier\n     */\n    /*\n    .button--loading {\n        position: relative;\n        cursor: wait;\n    }\n    .button--loading .button__icon,\n    .button--loading .button__label,\n    .button--loading .button__caret {\n        visibility: hidden;\n    }\n    .button--loading sl-spinner {\n        --indicator-color: currentColor;\n        position: absolute;\n        font-size: 1em;\n        height: 1em;\n        width: 1em;\n        top: calc(50% - 0.5em);\n        left: calc(50% - 0.5em);\n    // }\n    */\n\n    /*\n     * Badges\n     */\n    /*\n    .button ::slotted(sl-badge) {\n        position: absolute;\n        top: 0;\n        right: 0;\n        translate: 50% -50%;\n        pointer-events: none;\n    }\n    .button--rtl ::slotted(sl-badge) {\n        right: auto;\n        left: 0;\n        translate: -50% -50%;\n    }\n    */\n\n    /*\n     * Button spacing\n     */\n\n    /** gapは各サイズ共通 */\n    .button--xs,\n    .button--s,\n    .button--m,\n    .button--l,\n    .button--xl {\n        gap: var(--rui-gap-intra-m)\n    }\n\n    /** padding */\n    .button--has-label.button--xs {\n        padding: var(--rui-button-padding-v-xs) var(--rui-padding-primary-xs);\n    }\n    .button--has-label.button--s {\n        padding: var(--rui-button-padding-v-s) var(--rui-padding-primary-s);\n    }\n    .button--has-label.button--m {\n        padding: var(--rui-button-padding-v-m) var(--rui-padding-primary-m);\n    }\n    .button--has-label.button--l {\n        padding: var(--rui-button-padding-v-l) var(--rui-padding-primary-l);\n    }\n    .button--has-label.button--xl {\n        padding: var(--rui-button-padding-v-xl) var(--rui-padding-primary-xl);\n    }\n\n    /** iconがなければ隠す (gapの重複を防ぐため) */\n    .button:not(.button--has-icon) .button__icon {\n        display: none;\n    }\n    /** iconがあればpaddingを詰める */\n    .button--has-label.button--has-icon.button--xs {\n        padding-inline-start: var(--rui-padding-primary-graphic-xs);\n    }\n    .button--has-label.button--has-icon.button--s {\n        padding-inline-start: var(--rui-padding-primary-graphic-s);\n    }\n    .button--has-label.button--has-icon.button--m {\n        padding-inline-start: var(--rui-padding-primary-graphic-m);\n    }\n    .button--has-label.button--has-icon.button--l {\n        padding-inline-start: var(--rui-padding-primary-graphic-l);\n    }\n    .button--has-label.button--has-icon.button--xl {\n        padding-inline-start: var(--rui-padding-primary-graphic-xl);\n    }\n\n    /** iconがあればlabelの位置を調整 (上下揃って見えるように) */\n    .button--has-icon .button__label {\n        /*\n        position: relative;\n        bottom: 0.06rem;\n        */\n    }\n\n    /** navアイコンがrightかdownならもっとpaddingを詰める */\n    .button--nav.button--nav-right,\n    .button--nav.button--nav-down {\n        padding-right: var(--rui-button-padding-nav);\n    }\n    .button--nav.button--nav-right.button--pill,\n    .button--nav.button--nav-down.button--pill {\n        padding-right: var(--rui-button-padding-nav-pill);\n    }\n    /** navアイコンがnextでpillのときのpadding　pillでないときはposition:absoluteなので不要 */\n    .button--nav.button--nav-next.button--pill {\n        padding-right: var(--rui-button-padding-nav-pill);\n    }\n\n`\n\n// button:active {\n//     transition: none;\n// }\n\n\n\n","import { classMap } from 'lit/directives/class-map.js';\nimport { FormControlController, validValidityState } from '../../internal/form.js';\nimport { HasSlotController } from '../../internal/slot.js';\nimport { html, literal } from 'lit/static-html.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { LocalizeController } from '../../utilities/localize.js';\nimport { property, query, state } from 'lit/decorators.js'\nimport { watch } from '../../internal/watch';\nimport ShoelaceElement from '../../internal/shoelace-element.js';\nimport RuiIcon from '../icon/icon.component'\n// import SlSpinner from '../spinner/spinner.component.js';\nimport styles from './button.styles'\nimport { CSSResultGroup } from 'lit'\nimport type { ShoelaceFormControl } from '../../internal/shoelace-element.js';\n\n/**\n * @summary Buttons represent actions that are available to the user.\n * @documentation https://shoelace.style/components/button\n * @status stable\n * @since 2.0\n *\n * @dependency rui-icon\n * @dependency sl-spinner\n *\n * @event sl-blur - Emitted when the button loses focus.\n * @event sl-focus - Emitted when the button gains focus.\n * @event sl-invalid - Emitted when the form control has been checked for validity and its constraints aren't satisfied.\n *\n * @slot - The button's label.\n * @slot icon - A presentational prefix icon or similar element.\n *\n * @csspart base - The component's base wrapper.\n * @csspart icon - The container that wraps the icon.\n * @csspart label - The button's label.\n * @csspart navigation - The button's caret icon, an `<rui-icon>` element.\n * @csspart spinner - The spinner that shows when the button is in the loading state.\n */\nexport default class RuiButton extends ShoelaceElement implements ShoelaceFormControl {\n    static styles: CSSResultGroup = styles;\n    static dependencies = {\n        'rui-icon': RuiIcon,\n        // 'sl-spinner': SlSpinner\n    };\n\n    private readonly formControlController = new FormControlController(this, {\n        form: input => {\n            // Buttons support a form attribute that points to an arbitrary form, so if this attribute is set we need to query\n            // the form from the same root using its id\n            if (input.hasAttribute('form')) {\n                const doc = input.getRootNode() as Document | ShadowRoot;\n                const formId = input.getAttribute('form')!;\n                return doc.getElementById(formId) as HTMLFormElement;\n            }\n\n            // Fall back to the closest containing form\n            return input.closest('form');\n        },\n        assumeInteractionOn: ['click']\n    });\n    private readonly hasSlotController = new HasSlotController(this, '[default]', 'icon');\n    private readonly localize = new LocalizeController(this);\n\n    @query('.button') button: HTMLButtonElement | HTMLLinkElement;\n\n    @state() private hasFocus = false;\n    @state() invalid = false;\n    @property() title = ''; // make reactive to pass through\n\n    /** The button's theme variant. */\n    @property({ reflect: true }) variant: 'normal' | 'primary' | 'secondary' | 'borderless' | 'transparent' | 'link' = 'normal';\n\n    /**\n     * Draws a shadow as FAB button.\n     */\n    @property({ type: Boolean, reflect: true }) fab = false;\n\n    /** The button's size. */\n    @property({ reflect: true }) size: 'xs' | 's' | 'm' | 'l' | 'xl' = 'm';\n\n    /** Draws the button with a caret. Used to indicate that the button triggers a dropdown menu or similar behavior. */\n    // @property({ type: Boolean, reflect: true }) caret = false;\n    /** Draws the button with a navigation icon (\"...\" for next, \">\" for right, \"v\" for down). Used to indicate that the button triggers transition. */\n    @property() navigation: 'next' | 'right' | 'down' | 'none' | undefined = undefined;\n\n    /** Disables the button. */\n    @property({ type: Boolean, reflect: true }) disabled = false;\n\n    /** Draws the button in a loading state. */\n    @property({ type: Boolean, reflect: true }) loading = false;\n\n    /** Draws an outlined button. */\n    // @property({ type: Boolean, reflect: true }) outline = false;\n\n    /** Draws a corner rounded button. */\n    @property({ reflect: true }) radius: 'none' | 's' | 'm' | 'l' = 'm';\n\n    /** Draws a pill-style button with rounded edges. Overrides radius. */\n    @property({ type: Boolean, reflect: true }) pill = false;\n\n    /**\n     * Draws a circular icon button.\n     */\n    @property({ type: Boolean, reflect: true }) circle = false;\n\n    /**\n     * The type of button. Note that the default value is `button` instead of `submit`, which is opposite of how native\n     * `<button>` elements behave. When the type is `submit`, the button will submit the surrounding form.\n     */\n    @property() type: 'button' | 'submit' | 'reset' = 'button';\n\n    /**\n     * The name of the button, submitted as a name/value pair with form data, but only when this button is the submitter.\n     * This attribute is ignored when `href` is present.\n     */\n    @property() name = '';\n\n    /**\n     * The value of the button, submitted as a pair with the button's name as part of the form data, but only when this\n     * button is the submitter. This attribute is ignored when `href` is present.\n     */\n    @property() value = '';\n\n    /** When set, the underlying button will be rendered as an `<a>` with this `href` instead of a `<button>`. */\n    @property() href = '';\n\n    /** Tells the browser where to open the link. Only used when `href` is present. */\n    @property() target: '_blank' | '_parent' | '_self' | '_top';\n\n    /**\n     * When using `href`, this attribute will map to the underlying link's `rel` attribute. Unlike regular links, the\n     * default is `noreferrer noopener` to prevent security exploits. However, if you're using `target` to point to a\n     * specific tab/window, this will prevent that from working correctly. You can remove or change the default value by\n     * setting the attribute to an empty string or a value of your choice, respectively.\n     */\n    @property() rel = 'noreferrer noopener';\n\n    /** Tells the browser to download the linked file as this filename. Only used when `href` is present. */\n    @property() download?: string;\n\n    /**\n     * The \"form owner\" to associate the button with. If omitted, the closest containing form will be used instead. The\n     * value of this attribute must be an id of a form in the same document or shadow root as the button.\n     */\n    @property() form: string;\n\n    /** Used to override the form owner's `action` attribute. */\n    @property({ attribute: 'formaction' }) formAction: string;\n\n    /** Used to override the form owner's `enctype` attribute.  */\n    @property({ attribute: 'formenctype' })\n    formEnctype: 'application/x-www-form-urlencoded' | 'multipart/form-data' | 'text/plain';\n\n    /** Used to override the form owner's `method` attribute.  */\n    @property({ attribute: 'formmethod' }) formMethod: 'post' | 'get';\n\n    /** Used to override the form owner's `novalidate` attribute. */\n    @property({ attribute: 'formnovalidate', type: Boolean }) formNoValidate: boolean;\n\n    /** Used to override the form owner's `target` attribute. */\n    @property({ attribute: 'formtarget' }) formTarget: '_self' | '_blank' | '_parent' | '_top' | string;\n\n    /** Gets the validity state object */\n    get validity() {\n        if (this.isButton()) {\n            return (this.button as HTMLButtonElement).validity;\n        }\n        return validValidityState;\n    }\n\n    /** Gets the validation message */\n    get validationMessage() {\n        if (this.isButton()) {\n            return (this.button as HTMLButtonElement).validationMessage;\n        }\n        return '';\n    }\n\n    firstUpdated() {\n        if (this.isButton()) {\n            this.formControlController.updateValidity();\n        }\n    }\n\n    private handleBlur() {\n        this.hasFocus = false;\n        this.emit('sl-blur');\n    }\n\n    private handleFocus() {\n        this.hasFocus = true;\n        this.emit('sl-focus');\n    }\n\n    private handleClick() {\n        if (this.type === 'submit') {\n            this.formControlController.submit(this);\n        }\n\n        if (this.type === 'reset') {\n            this.formControlController.reset(this);\n        }\n    }\n\n    private handleInvalid(event: Event) {\n        this.formControlController.setValidity(false);\n        this.formControlController.emitInvalidEvent(event);\n    }\n\n    private isButton() {\n        return this.href ? false : true;\n    }\n\n    private isLink() {\n        return this.href ? true : false;\n    }\n\n    @watch('disabled', { waitUntilFirstUpdate: true })\n    handleDisabledChange() {\n        if (this.isButton()) {\n            // Disabled form controls are always valid\n            this.formControlController.setValidity(this.disabled);\n        }\n    }\n\n    /** Simulates a click on the button. */\n    click() {\n        this.button.click();\n    }\n\n    /** Sets focus on the button. */\n    focus(options?: FocusOptions) {\n        this.button.focus(options);\n    }\n\n    /** Removes focus from the button. */\n    blur() {\n        this.button.blur();\n    }\n\n    /** Checks for validity but does not show a validation message. Returns `true` when valid and `false` when invalid. */\n    checkValidity() {\n        if (this.isButton()) {\n            return (this.button as HTMLButtonElement).checkValidity();\n        }\n\n        return true;\n    }\n\n    /** Gets the associated form, if one exists. */\n    getForm(): HTMLFormElement | null {\n        return this.formControlController.getForm();\n    }\n\n    /** Checks for validity and shows the browser's validation message if the control is invalid. */\n    reportValidity() {\n        if (this.isButton()) {\n            return (this.button as HTMLButtonElement).reportValidity();\n        }\n\n        return true;\n    }\n\n    /** Sets a custom validation message. Pass an empty string to restore validity. */\n    setCustomValidity(message: string) {\n        if (this.isButton()) {\n            (this.button as HTMLButtonElement).setCustomValidity(message);\n            this.formControlController.updateValidity();\n        }\n    }\n\n    render() {\n        const isLink = this.isLink();\n        const tag = isLink ? literal`a` : literal`button`;\n\n        /* eslint-disable lit/no-invalid-html */\n        /* eslint-disable lit/binding-positions */\n        return html`\n        <${tag}\n            part=\"base\"\n            class=${classMap({\n            button: true,\n            'button--normal': this.variant === 'normal',\n            'button--primary': this.variant === 'primary',\n            'button--secondary': this.variant === 'secondary',\n            'button--borderless': this.variant === 'borderless',\n            'button--transparent': this.variant === 'transparent',\n            // 'button--danger': this.variant === 'danger',\n            'button--link': this.variant === 'link',\n            'button--fab': this.fab,\n            'button--xs': this.size === 'xs',\n            'button--s': this.size === 's',\n            'button--m': this.size === 'm',\n            'button--l': this.size === 'l',\n            'button--xl': this.size === 'xl',\n            'button--radius-none': this.radius === 'none',\n            'button--radius-s': this.radius === 's',\n            'button--radius-m': this.radius === 'm',\n            'button--radius-l': this.radius === 'l',\n            // 'button--caret': this.caret,\n            'button--nav': this.navigation !== ('none' || undefined),\n            'button--nav-next': this.navigation === 'next',\n            'button--nav-right': this.navigation === 'right',\n            'button--nav-down': this.navigation === 'down',\n            'button--circle': this.circle,\n            'button--disabled': this.disabled,\n            'button--focused': this.hasFocus,\n            'button--loading': this.loading,\n            // 'button--standard': !this.outline,\n            // 'button--outline': this.outline,\n            'button--pill': this.pill,\n            'button--rtl': this.localize.dir() === 'rtl',\n            'button--has-label': this.hasSlotController.test('[default]'),\n            'button--no-label': !this.hasSlotController.test('[default]'),\n            'button--has-icon': this.hasSlotController.test('icon'),\n        })}\n            ?disabled=${ifDefined(isLink ? undefined : this.disabled)}\n            type=${ifDefined(isLink ? undefined : this.type)}\n            title=${this.title /* An empty title prevents browser validation tooltips from appearing on hover */}\n            name=${ifDefined(isLink ? undefined : this.name)}\n            value=${ifDefined(isLink ? undefined : this.value)}\n            href=${ifDefined(isLink ? this.href : undefined)}\n            target=${ifDefined(isLink ? this.target : undefined)}\n            download=${ifDefined(isLink ? this.download : undefined)}\n            rel=${ifDefined(isLink ? this.rel : undefined)}\n            role=${ifDefined(isLink ? undefined : 'button')}\n            aria-disabled=${this.disabled ? 'true' : 'false'}\n            tabindex=${this.disabled ? '-1' : '0'}\n            @blur=${this.handleBlur}\n            @focus=${this.handleFocus}\n            @invalid=${this.isButton() ? this.handleInvalid : null}\n            @click=${this.handleClick}\n        >\n            <slot name=\"icon\" part=\"icon\" class=\"button__icon\"></slot>\n            <slot part=\"label\" class=\"button__label\"></slot>\n                   \n            ${this.navigation === 'next'\n                ? html`\n                    <rui-icon part=\"nav-next\" class=\"button__nav button__nav-next\" library=\"system\" name=\"ellipsis_bottom\"></rui-icon>\n                `\n                : this.navigation === 'right'\n                    ? html`\n                    <rui-icon part=\"nav-right\" class=\"button__nav button__nav-right\" library=\"system\" name=\"chevron_right_l\"></rui-icon>\n                `\n                    : this.navigation === 'down'\n                        ? html`\n                    <rui-icon part=\"nav-down\" class=\"button__nav button__nav-down\" library=\"system\" name=\"chevron_down_l\"></rui-icon>\n                `\n                        : ''\n            }\n            <!--\n            ${this.loading ? html`<sl-spinner part=\"spinner\"></sl-spinner>` : ''} -->\n        </${tag}>\n    `;\n        /* eslint-enable lit/no-invalid-html */\n        /* eslint-enable lit/binding-positions */\n\n        // const fontSizeMap: { [key: string]: string } = {\n        //     xs: 's',\n        //     s: 'm',\n        //     m: 'm',\n        //     l: 'l',\n        //     xl: 'l'\n        // }\n        // const paddingMap: { [key: string]: string } = {\n        //     xs: 'l',\n        //     s: 'xl',\n        //     m: 'xxl',\n        //     l: 'x3l',\n        //     xl: 'x3l'\n        // }\n\n        // const buttonClass = `button ${this.appearance}`\n        // return html`\n        //     <button class=${buttonClass} style='\n        //         min-height: ${computeStyle('size-input', this.size)};\n        //         font-size: var(--rui-font-size-${fontSizeMap[this.size]});\n        //         padding: 0 var(--rui-space-${paddingMap[this.size]});\n        //         border-radius: ${this.shape === 'round' ? '999px' : computeStyle('radius', this.borderRadius || 'm')};\n        //     '>\n        //         ${this.iconLeft && html`<rui-icon icon=${this.iconLeft} color='inherit' size='inherit' style='\n        //             margin-right: 10px;\n        //         '></rui-icon>`}\n        //         <!-- <slot name=\"icon-${this.iconPosition}\"></slot> -->\n        //         <slot></slot>\n        //         <!-- <slot name=\"icon-${this.iconPosition === 'left' ? 'right' : 'left'}\"></slot> -->\n        //     </button>\n        // `\n    }\n}\n\n","import RuiButton from './button.component';\n\nexport * from './button.component';\nexport default RuiButton;\n\ncustomElements.define('rui-button', RuiButton);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rui-button': RuiButton;\n  }\n}\n"],"names":["t","e","i$2","i","o","s","r","formCollections","reportValidityOverloads","userInteractedControls","interactions","FormControlController","host","options","event","disabled","name","value","isButton","val","reportValidity","_a","control","emittedEvents","elements","element","input","root","formId","form","el","hasInteracted","type","submitter","button","attr","isValid","required","originalInvalidEvent","slInvalidEvent","validValidityState","HasSlotController","slotNames","slot","node","slotName","l","a","n","u","c","$","f","connectedElements","documentElementObserver","update","translations","documentDirection","documentLanguage","fallback","registerTranslation","translation","code","LocalizeController$1","lang","_b","locale","language","region","primary","secondary","key","args","term","dateToFormat","numberToFormat","unit","slide","count","num","LocalizeController","DefaultLocalizationController","en","watch","propertyName","resolvedOptions","proto","decoratedFnName","watchedProperties","changedProps","property","oldValue","newValue","ShoelaceElement","LitElement","component","elementConstructor","__decorateClass","componentStyles","css","styles","RuiButton","doc","message","isLink","tag","literal","html","classMap","ifDefined","RuiIcon","query","state"],"mappings":"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AA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA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","x_google_ignoreList":[0,1,4,5,6,9,10,11]}